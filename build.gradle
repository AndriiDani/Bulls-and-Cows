apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'jacoco'

mainClassName = "src.java.app.Application"

sourceSets {
    main {
        java.srcDir("src/java")
        resources.srcDir("src/resources")
    }
    test {
        java.srcDir("src/test")
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {

    repositories {
    }

    dependencies {
    }
}

jar {
    baseName = 'tools'
    version = '0.1.0'
}

repositories {
    jcenter()
}

dependencies {
    testCompile("junit:junit:4.12")
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

task javaCodeCoverage(type: JacocoReport, dependsOn: 'testDevDebugUnitTest') {

    reports {
        xml.enabled = false
        html.enabled = true
        html.destination "$project.buildDir/outputs/jacoco/"
    }

    def classFileTree = fileTree(
            dir: "${buildDir}/intermediates/classes/dev/",
    )

    classDirectories = files([classFileTree])
    sourceDirectories = files("${project.projectDir}/src/java")
    executionData = files("${buildDir}/jacoco/testDevDebugUnitTest.exec")
}
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}
check.dependsOn jacocoTestReport

task integrationTest(type: Test) {jacoco {
    append = true
    destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
    classDumpFile = file("$buildDir/jacoco/classpathdumps")
}
 testClassesDir = sourceSets.integrationTest.output.classesDir
classpath = sourceSets.integrationTest.runtimeClasspath}

